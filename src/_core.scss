@use '~@angular/material' as mat;
@use 'sass:map';

// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';

// Add imports for other components in your app.

// BOOTSTRAP STEP 1. Include functions & variables first (so you can manipulate colors, SVGs, calc, etc)
@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";

// BOOTSTRAP STEP 2. Include any default variable overrides here
@import './mat_palettes';
@import '~@angular/material/core/theming/palette';
/******************** This is a list of the default material palettes ********************
    $red-palette
    $pink-palette
    $purple-palette
    $deep-purple-palette
    $indigo-palette
    $blue-palette
    $light-blue-palette
    $cyan-palette
    $teal-palette
    $green-palette
    $light-green-palette
    $lime-palette
    $yellow-palette
    $amber-palette
    $orange-palette
    $deep-orange-palette
    $brown-palette
    $grey-palette
    $blue-grey-palette
*/
$blue: mat.get-color-from-palette(mat.$blue-palette, 500);
$indigo: mat.get-color-from-palette(mat.$indigo-palette, 500);
$purple: mat.get-color-from-palette(mat.$purple-palette, 500);
$pink: mat.get-color-from-palette(mat.$pink-palette, 500);
$red: mat.get-color-from-palette(mat.$red-palette, 500);
$orange: mat.get-color-from-palette(mat.$orange-palette, 500);
$yellow: mat.get-color-from-palette(mat.$yellow-palette, 500);
$green: mat.get-color-from-palette(mat.$green-palette, 500);
$teal: mat.get-color-from-palette(mat.$teal-palette, 500);
$cyan: mat.get-color-from-palette(mat.$cyan-palette, 500);
$dark: $dark-primary-text;
$font-family-sans-serif: Roboto, "Helvetica Neue", sans-serif, Arial, system-ui, -apple-system;
$headings-font-weight: $font-weight-light;

$theme-colors: (
    "primary": $blue,
    "danger": $red,
    "success": $green,
    "warning": $yellow,
);
// BOOTSTRAP STEP 3. Include remainder of required Bootstrap stylesheets
@import "~bootstrap/scss/mixins";

// BOOTSTRAP STEP 4. Include any optional Bootstrap components as you like
@import "~bootstrap/scss/bootstrap";

// @import "~bootstrap/scss/root";
// @import "~bootstrap/scss/bootstrap-reboot";
// @import "~bootstrap/scss/bootstrap-grid";
// @import "~bootstrap/scss/utilities"; // @import "~bootstrap/scss/bootstrap-utilities";
// @import "~bootstrap/scss/alert";
// @import "~bootstrap/scss/type";
// @import "~bootstrap/scss/spinners";
// @import "~bootstrap/scss/print";
// @import "~bootstrap/scss/badge";

// BOOTSTRAP STEP 5. Add additional custom code here
@import "~@ng-select/ng-select/themes/material.theme.css";
@import '~ngx-toastr/toastr';
// @import '~ngx-toastr/toastr-bs4-alert';

// Overwrite material typography values with Bootstrap values
$core-typography: mat.define-typography-config($font-family: $font-family-sans-serif,

    $display-4: mat-typography-level($h1-font-size, $line-height-lg, $font-weight-light, $letter-spacing: -0.05em), // .mat-display-4
    $display-3: mat-typography-level($h2-font-size, $line-height-lg, $font-weight-normal, $letter-spacing: -0.02em), // .mat-display-3
    $display-2: mat-typography-level($h3-font-size, $line-height-lg, $font-weight-normal, $letter-spacing: -0.005em), // .mat-display-2
    $display-1: mat-typography-level($h4-font-size, $line-height-lg, $font-weight-normal), // .mat-display-1

    $headline:      mat-typography-level($h4-font-size, $line-height-base, $font-weight-normal), // .mat-h1, .headline, .mat-typography h1
    $title:         mat-typography-level($font-size-lg, $line-height-base, $font-weight-normal), // .mat-h2, .title, .mat-typography h2
    $subheading-2:  mat-typography-level($font-size-lg, $line-height-base, $font-weight-normal), // .mat-h3, .subheading-2, .mat-typography h3
    $subheading-1:  mat-typography-level($font-size-lg, $line-height-base, $font-weight-normal), // .mat-h4, .subheading-1, .mat-typography h4

    $body-1:    mat-typography-level($font-size-base, $line-height-base, $font-weight-normal), // body, .mat-body, .mat-body-1
    $body-2:    mat-typography-level($font-size-base, $line-height-lg, 500), // .mat-body-strong, .mat-body-2
    $caption:   mat-typography-level($font-size-sm, $line-height-sm, $font-weight-normal), // .mat-small, .mat-caption
    $button:    mat-typography-level($font-size-base, $line-height-base, 500), // base w bold
    $input:     mat-typography-level($font-size-base, $line-height-base, $font-weight-normal) // base form
);

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core($core-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

// The warn palette is optional (defaults to red).

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$allogy-light-theme: mat.define-light-theme((color: (
    primary: mat.define-palette(mat.$blue-palette),
    accent: mat.define-palette($allogy-tenant-palette),
)));
$allogy-dark-theme: mat.define-dark-theme((color: (
    primary: mat.define-palette(mat.$cyan-palette),
    accent: mat.define-palette($allogy-tenant-palette),
    warn: mat.define-palette(mat.$pink-palette),
)));

// STATUSES for green success, yellow warning, and red danger
$statuses-light-theme: mat.define-light-theme((color: (
    primary: mat.define-palette($bootstrap4-success),
    accent: mat.define-palette($bootstrap4-warning),
    warn: mat.define-palette($bootstrap4-danger),
)));
$statuses-dark-theme: mat.define-dark-theme((color: (
    primary: mat.define-palette(mat.$light-green-palette),
    accent: mat.define-palette(mat.$yellow-palette),
    warn: mat.define-palette(mat.$red-palette),
)));

// MONOCHROME for secondary, light, and mid grays
$monochrome-light-theme: mat.define-light-theme((color: (
    primary: mat.define-palette($bootstrap4-secondary),
    accent: mat.define-palette($bootstrap4-light),
    warn: mat.define-palette(mat.$grey-palette),
)));
$monochrome-dark-theme: mat.define-dark-theme((color: (
    primary: mat.define-palette($bootstrap4-light),
    accent: mat.define-palette($bootstrap4-secondary),
    warn: mat.define-palette(mat.$grey-palette),
)));

// PUBLICATION for green published, blue new, and yellow modified
$publication-state-theme: mat.define-light-theme((color: (
    primary: mat.define-palette($bootstrap4-success),
    accent: mat.define-palette(mat.$blue-palette),
    warn: mat.define-palette(mat.$amber-palette),
)));
$publication-state-dark-theme: mat.define-dark-theme((color: (
    primary: mat.define-palette(mat.$light-green-palette),
    accent: mat.define-palette(mat.$light-blue-palette),
    warn: mat.define-palette(mat.$yellow-palette),
)));



// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// https://material.angular.io/guide/duplicate-theming-styles
@include mat.all-component-themes($allogy-light-theme);

.status-colors {
    @include mat.button-color($statuses-light-theme);
    @include mat.chips-color($statuses-light-theme);
}

.monochrome-colors {
    @include mat.button-color($monochrome-light-theme);
    @include mat.chips-color($monochrome-light-theme);
}

.publication-state-chips {
    @include mat.chips-color($publication-state-theme);
}

.dark-theme {
    color-scheme: dark;
    // This mixin only generates the color styles now.
    @include mat.all-component-colors($allogy-dark-theme);

    .status-colors {
        @include mat.button-color($statuses-dark-theme);
        @include mat.chips-color($statuses-dark-theme);
    }

    .monochrome-colors {
        @include mat.button-color($monochrome-dark-theme);
        @include mat.chips-color($monochrome-dark-theme);
    }

    .publication-state-chips {
        @include mat.chips-color($publication-state-dark-theme);
    }

    .text-body {
        color: white !important;
    }

    .bg-light {
        background-color: $secondary !important;
    }

    .bg-secondary {
        background-color: $light !important;
    }

    .bg-white {
        background-color: #424242 !important;
    }

    .border-white {
        border-color: #424242 !important;
    }

    .bg-dark {
        background-color: white !important;
    }

    .text-light {
        color: $secondary !important;
    }

    .text-secondary {
        color: $light !important;
    }

    .text-white {
        color: $dark-text !important;
    }

    .text-dark {
        color: $light-text !important;
    }

    .text-muted {
        color: #cddbe6 !important; // AAA ratio
    }

    img[src*="assets/images/placeholders"] {
        filter: invert(50%);
    }
}
